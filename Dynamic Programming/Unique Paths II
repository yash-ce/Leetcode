class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        int t[m][n];
        memset(t, -1, sizeof(t));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(obstacleGrid[i][j] == 1){
                    t[i][j] = 0;
                }
                else if(i == 0 && j == 0) {
                    t[i][j] = 1;
                }
                else{
                    int l = 0 ,r = 0;
                    if(i > 0){
                        l = t[i-1][j];
                    }
                    if(j > 0){
                        r = t[i][j-1];
                    }
                    // t[i][j] = t[i-1][j] + t[i][j-1];
                    t[i][j] = l + r;
                }
            }
        }
        return t[m-1][n-1];
    }
};
