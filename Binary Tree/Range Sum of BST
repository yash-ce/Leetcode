// https://leetcode.com/problems/range-sum-of-bst/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        
        int n = sum_(root, low, high);
        return n;
    }
    
    int sum = 0;
    private int sum_(TreeNode root, int l, int n){
        if(root == null){
            return 0;
        }
        if(root.val >= l && root.val <= n){
            // System.out.println(root.val);
                sum += root.val;
        }
        
            sum_(root.left, l, n);
            sum_(root.right, l, n);
            
        
        
        return sum;
    }
}
