//  https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int result = 0;
    public int maxAncestorDiff(TreeNode root) {
        dfs(root, root.val, root.val);
        return result;
    }
     private void dfs(TreeNode node, int cmin, int cmax){
        if(node == null){
            return;
        }
        
        result = Math.max(result, Math.max(Math.abs(node.val-cmin), Math.abs(node.val - cmax)));
        cmin = Math.min(cmin, node.val);
        cmax = Math.max(cmax, node.val);
        dfs(node.left, cmin, cmax);
        dfs(node.right, cmin, cmax);
    }
}
