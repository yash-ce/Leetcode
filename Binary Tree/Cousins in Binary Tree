/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        if(root == NULL) return false;
        queue<TreeNode*> q;
        q.push(root);
        TreeNode* xParent = NULL, *yParent = NULL;
        while(!q.empty()){
            int size = q.size();
            for(int i=0;i<size;i++){
                TreeNode* node = q.front();
                q.pop();
                if(node->left != NULL){
                    q.push(node->left);
                    if(node->left->val == x){
                        xParent = node;
                    }
                    if(node->left->val == y){
                        yParent = node;
                    }
                    
                }
                if(node->right != NULL){
                    q.push(node->right);
                    if(node->right->val == x){
                        xParent = node;
                    }
                    if(node->right->val == y){
                        yParent = node;
                    }
                }
                if(xParent != NULL && yParent != NULL){
                    return xParent != yParent;
                }
            }
            if((xParent != NULL && yParent == NULL) || (xParent == NULL && yParent != NULL)){
                return false;
            }
        }
        return false;
    }
        
};
