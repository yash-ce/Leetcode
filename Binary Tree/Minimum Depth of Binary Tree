/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        
        if(root == NULL){
            return 0;
        }
        int res = 1;
        queue<TreeNode*> q;
        q.push(root);
        bool flag = false;
        while(!q.empty()){
            int size = q.size();
            for(int i=0;i<size;i++){
                TreeNode* node = q.front();
                if(node->left == NULL && node->right == NULL){
                    flag = true;
                }
                q.pop();
                
                if(node->left != NULL){
                    q.push(node->left);
                    
                }
                if(node->right != NULL){
                    q.push(node->right);
                }
                
            }
            if(flag){
                break;
            }
            res++;
        }
        return res;
        
    }
};
