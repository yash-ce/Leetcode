https://leetcode.com/explore/learn/card/linked-list/214/two-pointer-technique/1212/

public class Solution {
    public boolean hasCycle(ListNode head) {
//         if(head == null){
//             return false;
//         }
//         ListNode slow = head;
//         ListNode fast = head;
        
//         while(fast.next != null && fast.next.next != null){
//             fast = fast.next.next;
//             slow = slow.next;
//             if(fast == slow){
//                 return true;
//             }
//         }
//         return false;
        if (head == null) {
            return false;
        }
        ListNode slow = head;
        ListNode fast = head;
         
        while(fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow=  slow.next;
            if(fast == slow) {
                return true;
            }
        }
        return false;
    }
}
