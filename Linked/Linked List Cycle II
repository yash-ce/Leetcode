https://leetcode.com/explore/learn/card/linked-list/214/two-pointer-technique/1214/

/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        // if(head == null){
        //     return null;
        // }
        // ListNode fast = head;
        // ListNode slow = head;
        // ListNode ptr = head;
        // while(fast.next != null && fast.next.next != null){
        //     fast = fast.next.next;
        //     slow = slow.next;
        //     if(fast == slow){
        //         while(ptr != slow){
        //             ptr = ptr.next;
        //             slow = slow.next;
        //         }
        //         return ptr;
        //     }
        // }
        // return null;
        if(head == null){
            return null;
        }
        ListNode fast = head;
        ListNode slow = head;
        ListNode ptr = head;
        while(fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
            if(fast == slow){
                while(ptr != slow){
                    ptr = ptr.next;
                    slow = slow.next;
                }
                return ptr;
            }
        }
        return null;
    }
}
